{"version":3,"file":"static/js/884.fede221a.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAW,+BAEJC,EAAc,mCAAG,oGACLC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFhB,cACtBI,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,qDAOdC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,oBACcR,EADd,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBI,EAAS,mCAAG,WAAMD,GAAN,uFACAL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BACsBR,EADtB,oBADA,cACjBI,EADiB,yBAIhBA,EAASC,KAAKK,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,uFACHL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BACsBR,EADtB,oBADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZM,EAAiB,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCa,EADhC,+CADQ,cACzBT,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,0HCmE9B,UA9FqB,WACnB,OAAwCQ,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA4BN,EAAAA,EAAAA,UAAS,SAArC,eAAOO,EAAP,KAAeC,EAAf,KAIQd,GAAOe,EAAAA,EAAAA,MAAPf,IAERgB,EAAAA,EAAAA,YAAU,WAAM,wCAEd,8GAE2BjB,EAAAA,EAAAA,IAAkBC,GAF7C,OAEUJ,EAFV,OAGIY,EAAgBZ,GAChBkB,EAAU,YACVF,EAAUhB,EAASe,QALvB,gDAOIM,QAAQC,IAAR,MACAJ,EAAU,YACVJ,EAAS,KAAMS,SATnB,0DAFc,sBACdL,EAAU,WADI,mCAcdM,EACD,GAAE,CAACpB,IAGJ,MAKIO,EAJFc,YAAAA,OADF,MACgB,gFADhB,EAEEC,EAGEf,EAHFe,aACAC,EAEEhB,EAFFgB,MACAC,EACEjB,EADFiB,SAGF,MAAe,YAAXX,GACK,uCAGM,aAAXA,GACK,0DAAkCJ,KAG5B,aAAXI,GAEA,4BACE,2BACGQ,GACC,gBACEI,IAAG,UAnDG,mCAmDH,OAAmBJ,GACtBK,IAAI,gBACJC,OAAO,WAGT,gBACEF,IAAI,gFACJC,IAAI,gBACJC,OAAO,WAIX,4BACE,wBAAKJ,KACL,wCAAgBK,KAAKC,MAAqB,GAAfP,GAA3B,QACA,sCACA,uBAAIE,KACJ,oCACA,wBACG,OAAIb,GAAQmB,KAAI,SAAAC,GACf,MAAM,GAAN,OAAUA,EAAMC,KAAhB,IAED,aAIP,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAC,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,cA5CR,CAiDD,C","sources":["api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '597f2644d0be3c5b2ab09a53bdbbc182';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTopMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import { useParams, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieDetails } from 'api';\n\nconst POSTER_PATH = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [error, setError] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [status, setStatus] = useState('start');\n\n  // const location = useLocation();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setStatus('pending');\n    async function getMoviesDetails() {\n      try {\n        const response = await fetchMovieDetails(id);\n        setMovieDetails(response);\n        setStatus('resolved');\n        setGenres(response.genres);\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n        setError(error.message);\n      }\n    }\n    getMoviesDetails();\n  }, [id]);\n\n  // console.log(movieDetails);\n  const {\n    poster_path = 'https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png',\n    vote_average,\n    title,\n    overview,\n  } = movieDetails;\n\n  if (status === 'pending') {\n    return <h2>Loading...</h2>;\n  }\n\n  if (status === 'rejected') {\n    return <h2>Sorry! Something went wrong: {error}</h2>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <div>\n        <div>\n          {poster_path ? (\n            <img\n              src={`${POSTER_PATH}${poster_path}`}\n              alt=\"movies poster\"\n              height=\"200px\"\n            />\n          ) : (\n            <img\n              src=\"https://banffventureforum.com/wp-content/uploads/2019/08/no-photo-icon-22.png\"\n              alt=\"movies poster\"\n              height=\"200px\"\n            />\n          )}\n\n          <div>\n            <h3>{title}</h3>\n            <p>User score: {Math.round(vote_average * 10)}%</p>\n            <h4>Overview</h4>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>\n              {[...genres].map(genre => {\n                return `${genre.name} `;\n                // key={genre.id}>{genre.name}\n              })}\n            </p>\n          </div>\n        </div>\n        <div>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    );\n  }\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","fetchTopMovies","axios","response","data","results","fetchMovieDetails","id","fetchCast","cast","fetchReviews","fetchSearchMovies","query","useState","movieDetails","setMovieDetails","error","setError","genres","setGenres","status","setStatus","useParams","useEffect","console","log","message","getMoviesDetails","poster_path","vote_average","title","overview","src","alt","height","Math","round","map","genre","name","to","Suspense","fallback"],"sourceRoot":""}