{"version":3,"file":"static/js/267.694a6b7c.chunk.js","mappings":"8SAEMA,EAAU,mCACVC,EAAW,+BAEJC,EAAc,mCAAG,oGACLC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAFhB,cACtBI,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,qDAOdC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,oBACcR,EADd,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBI,EAAS,mCAAG,WAAMD,GAAN,uFACAL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BACsBR,EADtB,oBADA,cACjBI,EADiB,yBAIhBA,EAASC,KAAKK,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,uFACHL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAO,EADA,4BACsBR,EADtB,oBADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAOZM,EAAiB,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,kBACgCa,EADhC,+CADQ,cACzBT,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD,2EC/BjBQ,EAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OACvC,OACE,wBACGA,EAAOC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKJ,GAAL,OAAkBG,EAAMV,IAAhC,SAAuCU,EAAME,SADtCF,EAAMV,GADA,KAOtB,C,sICZYa,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACE,0BACE,kBAAMA,SAAUA,EAAhB,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,mBAAQJ,KAAK,SAAb,UACE,2CAKT,E,SC0BD,EApCe,WACb,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOf,EAAP,KAAckB,EAAd,KAyBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BpB,EAAAA,EAAAA,IAAkBC,GAF7C,OAEUT,EAFV,OAGI0B,EAAkB1B,GAHtB,gDAKI6B,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAACtB,KAGF,4BACE,oCACA,SAACQ,EAAD,CAAWC,SA1BM,SAAAc,GACnBA,EAAIC,iBAEJN,EAASK,EAAIE,OAAOC,SAAS1B,MAAM2B,MAAMC,QACzCL,EAAIE,OAAOI,OACZ,KAsBG,SAAC5B,EAAA,EAAD,CAAYC,WAAY,GAAIC,OAAQa,MAGzC,C","sources":["api.js","components/MoviesList.jsx","components/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '597f2644d0be3c5b2ab09a53bdbbc182';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTopMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import { Link } from 'react-router-dom';\n\nexport const MoviesList = ({ linkToPage, movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`${linkToPage}${movie.id}`}>{movie.title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export const SearchBox = ({ onSubmit }) => {\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { MoviesList } from '../components/MoviesList';\nimport { SearchBox } from 'components/SearchBox';\n\nimport { fetchSearchMovies } from '../api';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    // console.log(evt.target.elements.query.value.trim());\n    setQuery(evt.target.elements.query.value.trim());\n    evt.target.reset();\n  };\n\n  useEffect(() => {\n    async function getSearchMovies() {\n      try {\n        const response = await fetchSearchMovies(query);\n        setSearchedMovies(response);\n      } catch (error) {\n        console.log(error);\n        // toast.error('ERROR');\n        // setError(true);\n      }\n      // console.log(topMovies);\n      // finally {        setLoading(false);      }\n    }\n    getSearchMovies();\n  }, [query]);\n\n  return (\n    <div>\n      <h2>Movies</h2>\n      <SearchBox onSubmit={handleSubmit} />\n      <MoviesList linkToPage={''} movies={searchedMovies} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","fetchTopMovies","axios","response","data","results","fetchMovieDetails","id","fetchCast","cast","fetchReviews","fetchSearchMovies","query","MoviesList","linkToPage","movies","map","movie","to","title","SearchBox","onSubmit","type","name","autoComplete","autoFocus","placeholder","useState","searchedMovies","setSearchedMovies","setQuery","useEffect","console","log","getSearchMovies","evt","preventDefault","target","elements","value","trim","reset"],"sourceRoot":""}